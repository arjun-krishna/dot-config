is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

set -sg escape-time 0

# remap prefix from C-b to C-a
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# split panes using | and -
bind | split-window -h -c "#{pane_current_path}"
bind \\ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

bind r source-file ~/.config/tmux/tmux.conf

# switch panes 
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'

bind -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 1'
bind -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 1'
bind -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 1'
bind -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 1'

bind-key -T copy-mode-vi M-h resize-pane -L 1
bind-key -T copy-mode-vi M-j resize-pane -D 1
bind-key -T copy-mode-vi M-k resize-pane -U 1
bind-key -T copy-mode-vi M-l resize-pane -R 1

# enable mouse control
set -g mouse on

# stop renaming windows automatically
set-option -g allow-rename off

set-option -g default-shell /bin/zsh  
set -g default-terminal "screen-color256"

set-window-option -g mode-keys vi

# send C-l
bind C-l send-keys 'C-l'

# copy
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 
bind P paste-buffer
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel

# copy/paste map to clipboard
bind -n C-c run "tmux save-buffer - | pbcopy"
bind -n C-v run "pbpaste | tmux load-buffer -; tmux paste-buffer"

#  ######################
#  ### DESIGN CHANGES ###
#  ######################
#  
#  # loud or quiet?
#  set -g visual-activity off
#  set -g visual-bell off
#  set -g visual-silence off
#  setw -g monitor-activity off
#  set -g bell-action none
#  
#  # modes
#  setw -g clock-mode-colour colour5
#  setw -g mode-style 'fg=colour1 bg=colour18 bold'
#  
#  # panes
#  set -g pane-border-style 'fg=colour19 bg=colour0'
#  set -g pane-active-border-style 'bg=colour0 fg=colour9'
#  
#  # statusbar
#  set -g status-position bottom
#  set -g status-justify left
#  set -g status-style 'bg=colour18 fg=colour137 dim'
#  set -g status-left ''
#  set -g status-right '#[fg=colour233,bg=colour19] %d/%m #[fg=colour233,bg=colour8] %H:%M:%S '
#  set -g status-right-length 50
#  set -g status-left-length 20
#  
#  setw -g window-status-current-style 'fg=colour1 bg=colour19 bold'
#  setw -g window-status-current-format ' #I#[fg=colour249]:#[fg=colour255]#W#[fg=colour249]#F '
#  
#  setw -g window-status-style 'fg=colour9 bg=colour18'
#  setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '
#  
#  setw -g window-status-bell-style 'fg=colour255 bg=colour1 bold'
#  
#  # messages
#  set -g message-style 'fg=colour232 bg=colour16 bold'
#  
#  ######################

# ==============================
# Plugins
# ==============================
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# tmux-notify
set -g @plugin 'ChanderG/tmux-notify' # <C-a> + alt + n
set -g @tnotify-verbose 'on'
set -g @tnotify-verbose-msg 'completed: #W:#T (#I:#D)'
# ------------------------------

# pomodoro
set -g @plugin 'olimorris/tmux-pomodoro-plus'
set -g status-right "#{pomodoro_status}"

set -g @pomodoro_mins 25                    # The duration of the pomodoro
set -g @pomodoro_break_mins 5               # The duration of the break after the pomodoro
set -g @pomodoro_repeat false               # Auto-repeat the pomodoro? False by default

set -g @pomodoro_on " üçÖ "                   # The formatted output when the pomodoro is running
set -g @pomodoro_complete " ‚úÖ "             # The formatted output when the break is running


set -g @pomodoro_notifications 'on'        # Enable desktop notifications from your terminal
set -g @pomodoro_sound 'off'                # Sound for desktop notifications (Run `ls /System/Library/Sounds` for a list of sounds to use on Mac)

set -g @pomodoro_granularity 'on'
set -g status-interval 1                    # Refresh the status line every second
# ------------------------------

run '$HOME/.config/tmux/plugins/tpm/tpm'
